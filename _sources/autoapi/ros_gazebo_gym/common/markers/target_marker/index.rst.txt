:py:mod:`ros_gazebo_gym.common.markers.target_marker`
=====================================================

.. py:module:: ros_gazebo_gym.common.markers.target_marker

.. autoapi-nested-parse::

   Contains a class that can be used for displaying a target marker in RViz.

   .. note::
       This class overloads the :obj:`visualization_msgs.msgs.Marker` class in order to
       pre-initialize some of its attributes.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ros_gazebo_gym.common.markers.target_marker.TargetMarker




.. py:class:: TargetMarker(x=0, y=0, z=0, frame_id=None, *args, **kwargs)


   Bases: :py:obj:`visualization_msgs.msg.Marker`

   RViz target goal marker.

   .. attribute:: id

      The marker object id.

      :type: int

   .. attribute:: type

      The marker type.

      :type: str

   .. attribute:: action

      The marker message action (add or remove).

      :type: float

   .. attribute:: scale

      The marker scale.

      :type: :obj:`geometry_msgs.Vector3`

   .. attribute:: color

      The marker color.

      :type: :obj:`std_msgs.ColorRGBA`

   .. attribute:: lifetime

      The lifetime duration.

      :type: :obj:`rospy.duration`

   .. attribute:: frame_locked

      Boolean specifying whether the marker frame is locked to
      the world.

      :type: bool

   .. attribute:: point

      The marker points.

      :type: :obj:`geometry_msgs.Point`

   .. attribute:: text

      The text that is used for text markers.

      :type: str

   .. attribute:: mesh_resource

      Marker mess location.

      :type: str

   .. attribute:: mesh_use_embedded_materials

      Boolean specifying whether we want to use a
      mesh.

      :type: bool

   .. important::
       If both the x,y,z positions and a Pose is supplied the x,y,z positions are used.

   Initialize TargetMarker object.

   :param x: The target marker x position. Defaults to ``0``.
   :type x: int, optional
   :param y: The target marker y position. Defaults to ``0``.
   :type y: int, optional
   :param z: The target marker z position. Defaults to ``0``.
   :type z: int, optional
   :param frame_id: The frame the position/orientation are relative
                    to. Defaults to ``None``.
   :type frame_id: str, optional
   :param \*args: Arguments passed to the
                  :obj:`~visualization_msgs.msg.Marker` super class.
   :param \*\*kwargs: Keyword arguments that are passed to the
                      :obj:`~visualization_msgs.msg.Marker` super class.

   :raises Exception: Thrown when the ROS time is not initialised.

   .. py:property:: x

      Retrieve the marker x position.

   .. py:property:: y

      Retrieve the marker y position.

   .. py:property:: z

      Retrieve the marker z position.

   .. py:property:: pose

      Retrieve the marker pose.

   .. py:method:: publish_tf(tf_frame_name)

      Publish a tf frame for the marker.

      :param tf_frame_name: The name used for the tf frame. Defaults to
                            ``None`` (i.e. frame name will be autogenerated).
      :type tf_frame_name: str, optional



